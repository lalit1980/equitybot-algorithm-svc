### This is the main way to configure the application (other than annotations).
### This file is in Yaml format but you can also configure spring boot using the traditional
### Java properties file format.


### This is the main way to configure the application (other than annotations).
### This file is in Yaml format but you can also configure spring boot using the traditional
### Java properties file format.


spring:
  kafka:
    bootstrap-servers: ${KAFKASERVERS}
    consumer:
      zerodha-order-consume-topic: ${ALGOSERIESUPDATETOPIC}
      groupid: ${SERIESGROUPID}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      from:
        beginning: true
        groupid: ${SERIESGROUPID}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      topic: ${ALGOSERIESUPDATETOPIC}
      topic-totalProfit: ${ALGOSERIESTOALPROFITTOPIC}


  profiles: kubernetes

  data:
    mongodb:
      host: mongo
      port: 27017
      database: ${MONGODBDATABASE}

server:
  address: 0.0.0.0
  port: 9012

tick:
  file:
    Serializer: /data/logs
  barsize: 60
  maxserializetick: 1024
supertrend:
  bandSize: 3
  smaSize: 7
  userid: WU6870
  csvPath: /data/logs
  maxBarCount: 20
