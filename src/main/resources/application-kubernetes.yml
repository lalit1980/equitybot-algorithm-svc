### This is the main way to configure the application (other than annotations).
### This file is in Yaml format but you can also configure spring boot using the traditional
### Java properties file format.


### This is the main way to configure the application (other than annotations).
### This file is in Yaml format but you can also configure spring boot using the traditional
### Java properties file format.


selector:
  max-instrument-price-per-stock: 1000
  max-total-price: 800000
  order-quantity: 80
server:
  address: 0.0.0.0
  port: 9012
spring:
  data:
    mongodb:
      database: ${MONGODBDATABASE}
      host: mongo
      port: 27017
  kafka:
    bootstrap-servers: ${KAFKASERVERS}
    consumer:
      auto-offset-reset: latest
      from:
        beginning: true
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      topic-data-seriesupdate: ${ALGOSERIESUPDATETOPIC}
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      topic-data-seriesupdate: ${ALGOSERIESUPDATETOPIC}
      topic-kite-tradeorder: ${ALGOTRADEORDERTOPIC}
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  profiles: kubernetes
supertrend:
  bandSize: 3
  csvPath: /data/logs
  maxBarCount: 20
  smaSize: 7
  userid: ${USERID}
tick:
  barsize: 60
  file:
    Serializer: /data/logs
  maxserializetick: 1024
